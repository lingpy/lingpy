[metadata]
name = lingpy
version = 2.6.13
author = Johann-Mattis List and Robert Forkel
author_email = info@lingpy.org
description = Python library for quantitative tasks in historical linguistics
long_description = file: README.md
long_description_content_type = text/markdown
keywords =
    linguistics
    sequence alignment
    computational linguistics
    dialectology
    cognate detection
license = gpl-3.0
license_files = LICENSE
url = https://lingpy.org
platforms = any
classifiers =
    Development Status :: 5 - Production/Stable
    Intended Audience :: Developers
    Intended Audience :: Science/Research
    Natural Language :: English
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: Implementation :: CPython
    Programming Language :: Python :: Implementation :: PyPy
    License :: OSI Approved :: GNU General Public License v3 (GPLv3)

[options]
zip_safe = False
packages = find:
package_dir =
    = src
python_requires = >=3.8
install_requires =
    numpy
    appdirs
    networkx>=2.3
    tqdm
    csvw>=1.5.6
    clldutils>=2.8.0
    pycldf>=1.7.0
    lxml==4.8; python_version<'3.9'
    lxml; python_version>='3.9'
include_package_data = True

[options.packages.find]
where = src

[options.package_data]
lingpy =
    data/*

[options.entry_points]
console_scripts =
    lingpy = lingpy.cli:main

[options.extras_require]
dev =
    build
    wheel
    twine
    sphinx
    tox
test =
    pytest
    coverage
    pytest-mock
    pytest-cov
cluster =
    igraph
    scikit-learn
borrowing =
    matplotlib
    scipy

[bdist_wheel]
universal = 1

[flake8]
ignore = E711,E712,D100,D101,D103,D102,D301,E731
max-line-length = 100
exclude = .tox,cython

[tool:pytest]
minversion = 5
testpaths = tests
addopts = --cov

[easy_install]
zip_ok = false

[coverage:run]
source =
    lingpy
    tests

[coverage:report]
show_missing = true
skip_covered = true


[tox:tox]
envlist = py38, py39, py310, py311
isolated_build = true
skip_missing_interpreter = true

[testenv]
deps = .[test]
commands = pytest {posargs}
